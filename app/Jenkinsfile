pipeline {
    agent {
        label "main"
    }
    stages {
        stage('Test App') {
            steps {
                sh '''
                    pip install -r app/requirements.txt
                    cd app && python3 -m pytest --cov=main --cov-report html
                '''
                publishHTML target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'app/htmlcov',
                    reportFiles: 'index.html',
                    reportName: 'Code Coverage Report'
                ]
            }
        }
        stage('Build Docker Image') {
            steps {
                sh "cd ./app && sudo docker build . --tag diptichoudhary/${JOB_NAME}:${BUILD_NUMBER}"
            }
        }
        stage('Docker Push Registry') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                sh """
                    sudo docker login --username ${USERNAME} --password ${PASSWORD}
                    sudo docker push diptichoudhary/${JOB_NAME}:${BUILD_NUMBER}
                """
                }
            }
        }
        stage('Deploy To Docker Swarm') {
            agent {
                label "docker-swarm-manager"
            }
            steps {
                sh """
                    sudo IMAGE_TAG=${BUILD_NUMBER} IMAGE_NAME=diptichoudhary/${JOB_NAME} docker stack deploy --compose-file ./deploy/docker-compose.yaml ${JOB_NAME}
                """
            }
        }
    }
}